name: Supabase Backup and Restore

on:
  schedule:
    # Runs every day at 11:30 PM IST (which is 18:00 UTC)
    - cron: '0 18 * * *'
  workflow_dispatch:  # allows manual trigger from Actions tab

jobs:
  backup-and-restore:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Dump, compress, and restore Supabase databases
        env:
          SRC_DB: ${{ secrets.SRC_DB }}
          DEST_DB: ${{ secrets.DEST_DB }}
        run: |
          set -e
          DATE=$(date +%Y-%m-%d_%H-%M)
          BACKUP_FILE="supabase_backup_$DATE.dump"
          COMPRESSED_FILE="${BACKUP_FILE}.gz"

          echo "🟢 Starting pg_dump from source Supabase..."
          /usr/lib/postgresql/17/bin/pg_dump \
            --no-owner --no-privileges --no-publications --no-subscriptions --no-tablespaces \
            --exclude-schema=auth \
            --exclude-schema=storage \
            --exclude-schema=extensions \
            --exclude-schema=supabase_functions \
            --exclude-schema=pgbouncer \
            -Fc -v -d "$SRC_DB" -f "$BACKUP_FILE"

          if [ ! -s "$BACKUP_FILE" ]; then
            echo "❌ Backup file is empty or missing!"
            exit 1
          fi

          echo "🗜️ Compressing backup file..."
          gzip "$BACKUP_FILE"

          echo "🧾 Verifying compressed file..."
          ls -lh "$COMPRESSED_FILE"

          echo "🟢 Restoring compressed backup into destination Supabase..."
          gunzip -c "$COMPRESSED_FILE" | /usr/lib/postgresql/17/bin/pg_restore -v -d "$DEST_DB"

          echo "✅ Backup, compression, and restore completed successfully on $DATE"
          echo "COMPRESSED_FILE=$COMPRESSED_FILE" >> $GITHUB_ENV

      - name: Upload compressed backup as GitHub artifact
        uses: actions/upload-artifact@v4
        with:
          name: supabase-db-backup
          path: ${{ env.COMPRESSED_FILE }}
          retention-days: 7
